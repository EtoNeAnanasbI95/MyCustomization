;;-------------------[Widgets]------------------------------

(defwidget bar []
  (box :class "bar-widget" :orientation "h" :space-evenly true
    
    (box :orientation "h" :space-evenly false :halign "start"
      (logo)
      (workspaces)
    )
    
    (box :orientation "h" :space-evenly false :halign "center"
      (space)
      ;(noti)
      (clock)
    )
    
    (box :orientation "h" :space-evenly false :halign "end"
      (tray_button)
      ; (language)
      (picker)
      (battery)
      (indicator)
    )
  )
)

;;-----------------[battery]-----------------------------
(defwidget battery []
  (label :text battery)
)

;;-------------------[Logo]------------------------------

(defwidget logo []
  (button
    :class "logo bar-icon"
    :onclick "wofi --show drun &"
    (label :text "󰣇")
  )
)

;;-------------------[Clock]------------------------------

(defwidget clock []
  (label :class "clock" :text {formattime(EWW_TIME, "%I:%M %p")})
)

;;-------------------[Language]------------------------------

(defwidget language []
  (button
    :onclick "scripts/switch_kb_layout.sh &"
    :class "language"
    (label :text (str (eww-state keyboard_layout)))
    ;{kb_layout}
  )
)

;;-------------------[Tray]------------------------------

(defwidget tray []
  (revealer :transition "slideup" :reveal {open_tray} :duration {ANIM_DURATION}
    (box :class "tray_box" :orientation "h" :space-evenly false
      (systray :hexpand true :halign "center" :pack-direction "left")
    )
  )
)

(defwidget tray_button []
  (box
    (button :class "tray_button" :onclick "scripts/toggle_tray.sh --toggle"
      (label :text tray)
    )
  )
)

;;-------------------[Picker]------------------------------
(defwidget picker []
  (eventbox
    :onhover "${EWW_CMD} update notify=true"
    :onhoverlost "${EWW_CMD} update notify=false"
    (box
      :orientation "h"
      :space-evenly "false"
      :vexpand "false"
      
      (revealer
        :transition "slideleft"
        :reveal notify
        :duration {ANIM_DURATION}
        (box	:orientation "h"
          :space-evenly "false"
          (eventbox
            (button
              :onclick "./scripts/toggle_screenshot_menu.sh --toggle &"
            :class "picker" ""))
          ; (eventbox
            ;   (button
              ;     :onclick "kitty --title 'Float' -e scripts/send.sh &"
            ;     :class "picker" ""))
          (eventbox
            (button
              :onclick "hyprctl dispatch killactive"
            :class "picker" ""))))
      (button
        :onclick "~/bin/color_picker &"
      :class "picker" "󰃉" ))))

(defwidget screenshot_menu []
  (revealer :transition "slideup" :reveal {open_screenshot_menu} :duration {ANIM_DURATION}
    (box :class "tray_box" :orientation "h" :space-evenly false
      (button :onclick "./scripts/toggle_screenshot_menu.sh --screenshot all &" :class "logo" "")
      (button :onclick "./scripts/toggle_screenshot_menu.sh --screenshot window &" :class "logo" "")
      (button :onclick "./scripts/toggle_screenshot_menu.sh --screenshot area &" :class "logo" "+")
    )
  )
)

(defwidget record_menu []
  (revealer :transition "slideup" :reveal {open_record_menu} :duration {ANIM_DURATION}
    (box :class "tray_box" :orientation "h" :space-evenly false
      (button :onclick "./scripts/toggle_screenshot_menu.sh --screenshot all &" :class "logo" "")
      (button :onclick "./scripts/toggle_screenshot_menu.sh --screenshot window &" :class "logo" "")
      (button :onclick "./scripts/toggle_screenshot_menu.sh --screenshot area &" :class "logo" "+")
    )
  )
)

;;-------------------[Space]------------------------------

(defwidget space []
  (box :class "logo bar-icon"
    (label :text space)
  )
)

;;-------------------[Workspace]------------------------------

(defwidget workspaces []
  (eventbox :onscroll "scripts/get_active_workspace.sh {} ${current_workspace}"
    (box :orientation "h" :space-evenly false :class "workspaces" :hexpand true
      (for workspace in workspaces
        (button
          :class "workspace ${current_workspace == workspace.id ? "current" : ""}"
          :onclick "hyprctl dispatch workspace ${workspace.id}"
          ""
        )
      )
    )
  )
)

;;-------------------[Notifications]------------------------------

(defwidget noti []
  (button
    :onclick "scripts/toggle_notifications.sh --toggle &"
  :class "icon" "")
)
